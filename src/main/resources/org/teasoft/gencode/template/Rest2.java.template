package #{packageName}.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.teasoft.bee.mvc.Result;
import org.teasoft.honey.osql.core.Logger;

import #{packageName}.entity.#{entityName?up1};
import #{packageName}.service.#{entityName?up1}Service;

import #{constPackageName}.Const;

/**
 * @author AiTeaSoft.com
 * @since 2.1.7 
 */
@RestController
@RequestMapping("/#{entityName}")
public class #{entityName?up1}Rest {


	@Autowired
	#{entityName?up1}Service #{entityName}Service;

	@GetMapping("/list")
	public Result list(#{entityName?up1} #{entityName},
	                @RequestParam(value = "page", defaultValue = "1", required = false) int page,
			        @RequestParam(value = "size", defaultValue = "20", required = false) int size) {
		Result result = new Result();
		try {
			int total = #{entityName}Service.count(#{entityName});
			List<#{entityName?up1}> list = #{entityName}Service.select(#{entityName}, (page - 1) * size, size);
			result.setRows(list);
			result.setTotal(total);
			result.setMsg(Const.MSG_OK);
			result.setCode(Const.CODE_OK);
		} catch (Exception e) {
			result.setErrorMsg(Const.MSG_ERROR);
			result.setErrorCode(Const.CODE_ERROR);
			Logger.error(e.getMessage(), e);
		}

		return result;
	}

	@PostMapping("/add")
	public Result insert(#{entityName?up1} #{entityName}) {

		Result result = new Result();
		try {
			int num = #{entityName}Service.insert(#{entityName});
			result.setTotal(num);
			if (num == 1) {
				result.setMsg(Const.MSG_OK);
				result.setCode(Const.CODE_OK);
			} else if (num == 0) {
				result.setMsg(Const.CODE_NONE);
				result.setCode(Const.MSG_NONE);
			} else if (num < 0) {
				result.setErrorMsg(Const.MSG_UPDATE_ERROR);
				result.setErrorCode(Const.CODE_FAILED);
			}
		} catch (Exception e) {
			result.setErrorMsg(Const.MSG_ERROR);
			result.setErrorCode(Const.CODE_ERROR);
			Logger.error(e.getMessage(), e);
		}
		return result;
	}

	@PostMapping("/edit")
	public Result update(#{entityName?up1} #{entityName}) {
		Result result = new Result();
		try {
			int num = #{entityName}Service.update(#{entityName});
			result.setTotal(num);
			if (num > 0) {
				result.setMsg(Const.MSG_OK);
				result.setCode(Const.CODE_OK);
			} else if (num == 0) {
				result.setMsg(Const.CODE_NONE);
				result.setCode(Const.MSG_NONE);
			} else if (num < 0) {
				result.setErrorMsg(Const.MSG_UPDATE_ERROR);
				result.setErrorCode(Const.CODE_FAILED);
			}
		} catch (Exception e) {
			result.setErrorMsg(Const.MSG_ERROR);
			result.setErrorCode(Const.CODE_ERROR);
			Logger.error(e.getMessage(), e);
		}
		return result;
	}

	@PostMapping("/del")
	public Result delete(String ids) {
		Result result = new Result();
		try {
			int num = #{entityName}Service.deleteById(#{entityName?up1}.class, ids);
			result.setTotal(num);
			if (num > 0) {
				result.setMsg(Const.MSG_OK);
				result.setCode(Const.CODE_OK);
			} else if (num == 0) {
				result.setMsg(Const.CODE_NONE);
				result.setCode(Const.MSG_NONE);
			} else if (num < 0) {
				result.setErrorMsg(Const.MSG_UPDATE_ERROR);
				result.setErrorCode(Const.CODE_FAILED);
			}
		} catch (Exception e) {
			result.setErrorMsg(Const.MSG_ERROR);
			result.setErrorCode(Const.CODE_ERROR);
			Logger.error(e.getMessage(), e);
		}
		return result;
	}
}